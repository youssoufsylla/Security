name: SonarQube Analysis

on:
  push:
    branches: [main]
  pull_request:

jobs:
  sonarqube:
    runs-on: windows-latest
    timeout-minutes: 30  # Augmentation du timeout
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: https://7376-41-223-51-170.ngrok-free.app

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarScanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/sonar-scanner-cli
          key: sonar-scanner-${{ runner.os }}-7.1.0.4889

      - name: Install SonarScanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p "${{ runner.temp }}/sonar-scanner-cli"
          curl -sSLo scanner.zip "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-7.1.0.4889-windows-x64.zip"
          unzip -q scanner.zip -d "${{ runner.temp }}/sonar-scanner-cli"
          mv "${{ runner.temp }}/sonar-scanner-cli/sonar-scanner-7.1.0.4889-windows-x64"/* "${{ runner.temp }}/sonar-scanner-cli"

      - name: Run Fast SonarQube Scan
        run: |
          ${{ runner.temp }}/sonar-scanner-cli/bin/sonar-scanner.bat \
            -Dsonar.projectKey=rfc_callcenter_api_main \
            -Dsonar.projectName="RFC_CallCenter_API" \
            -Dsonar.exclusions="**/*.min.js,**/*.min.css,**/node_modules/**" \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.java.binaries=**/target/classes \
            -Dsonar.scm.disabled=true  # Désactive l'analyse SCM pour gagner du temps

      - name: Upload Security Report
        if: always()  # S'exécute même en cas d'échec
        uses: actions/upload-artifact@v4
        with:
          name: sonarqube-analysis-report
          path: |
            ${{ runner.temp }}/.scannerwork/*
            ${{ runner.temp }}/security-report.json
